{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/demi/Documents/Programs/Web/React/nextjs-react/advanced-nextjs-react/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\n\nconst Home = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"A Highly Available React Meetups finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\"mongodb+srv://SaiTeja:Ashkechum1224@cluster0.bwyer.mongodb.net/myMeetups?retryWrites=true&w=majority\");\n  const collection = client.db().collection(\"meetups\");\n  const response = await collection.find().toArray();\n  const meetups = response.map(meetup => {\n    return {\n      id: meetup._id.toString(),\n      title: meetup.title,\n      description: meetup.description,\n      address: meetup.address,\n      image: meetup.image\n    };\n  });\n  client.close();\n  return {\n    props: {\n      meetups\n    }\n  };\n}\nexport default Home;","map":{"version":3,"sources":["/home/demi/Documents/Programs/Web/React/nextjs-react/advanced-nextjs-react/pages/index.js"],"names":["MongoClient","MeetupList","Head","Home","props","meetups","getStaticProps","client","connect","collection","db","response","find","toArray","map","meetup","id","_id","toString","title","description","address","image","close"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACtB,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAYD,CAbD;;AAeA,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CACnB,sGADmB,CAArB;AAIA,QAAMC,UAAU,GAAGF,MAAM,CAACG,EAAP,GAAYD,UAAZ,CAAuB,SAAvB,CAAnB;AACA,QAAME,QAAQ,GAAG,MAAMF,UAAU,CAACG,IAAX,GAAkBC,OAAlB,EAAvB;AACA,QAAMR,OAAO,GAAGM,QAAQ,CAACG,GAAT,CAAcC,MAAD,IAAY;AACvC,WAAO;AACLC,MAAAA,EAAE,EAAED,MAAM,CAACE,GAAP,CAAWC,QAAX,EADC;AAELC,MAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFT;AAGLC,MAAAA,WAAW,EAAEL,MAAM,CAACK,WAHf;AAILC,MAAAA,OAAO,EAAEN,MAAM,CAACM,OAJX;AAKLC,MAAAA,KAAK,EAAEP,MAAM,CAACO;AALT,KAAP;AAOD,GARe,CAAhB;AAUAf,EAAAA,MAAM,CAACgB,KAAP;AAEA,SAAO;AACLnB,IAAAA,KAAK,EAAE;AACLC,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeF,IAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nimport Head from \"next/head\";\n\nconst Home = (props) => {\n  return (\n    <>\n      <Head>\n        <title>React Meetups</title>\n        <meta\n          name=\"description\"\n          content=\"A Highly Available React Meetups finder\"\n        />\n      </Head>\n      <MeetupList meetups={props.meetups} />;\n    </>\n  );\n};\n\nexport async function getStaticProps() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://SaiTeja:Ashkechum1224@cluster0.bwyer.mongodb.net/myMeetups?retryWrites=true&w=majority\"\n  );\n\n  const collection = client.db().collection(\"meetups\");\n  const response = await collection.find().toArray();\n  const meetups = response.map((meetup) => {\n    return {\n      id: meetup._id.toString(),\n      title: meetup.title,\n      description: meetup.description,\n      address: meetup.address,\n      image: meetup.image,\n    };\n  });\n\n  client.close();\n\n  return {\n    props: {\n      meetups,\n    },\n  };\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}
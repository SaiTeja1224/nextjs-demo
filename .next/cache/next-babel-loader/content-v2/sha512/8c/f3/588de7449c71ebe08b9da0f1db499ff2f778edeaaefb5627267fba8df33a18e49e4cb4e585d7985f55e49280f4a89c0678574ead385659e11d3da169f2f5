{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/demi/Documents/Programs/Web/React/nextjs-react/advanced-nextjs-react/pages/meetups/[meetup-id]/index.js\",\n    _this = this;\n\nimport MeetUpDetails from \"../../../components/meetups/MeetUpDetails\";\n\nvar Details = function Details(props) {\n  var content = \"\";\n\n  if (props.available) {\n    content = /*#__PURE__*/_jsxDEV(MeetUpDetails, {\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return content;\n};\n\n_c = Details;\nexport var __N_SSG = true;\nexport default Details;\n\nvar _c;\n\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"sources":["/home/demi/Documents/Programs/Web/React/nextjs-react/advanced-nextjs-react/pages/meetups/[meetup-id]/index.js"],"names":["MeetUpDetails","Details","props","content","available","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,aAAP,MAA0B,2CAA1B;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AACzB,MAAIC,OAAO,GAAG,EAAd;;AACA,MAAID,KAAK,CAACE,SAAV,EAAqB;AACnBD,IAAAA,OAAO,gBACL,QAAC,aAAD;AACE,MAAA,KAAK,EAAED,KAAK,CAACG,KADf;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACI,KAFf;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAACK,OAHjB;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACM;AAJrB;AAAA;AAAA;AAAA;AAAA,aADF;AAQD;;AACD,SAAOL,OAAP;AACD,CAbD;;KAAMF,O;;AAsFN,eAAeA,OAAf","sourcesContent":["import MeetUpDetails from \"../../../components/meetups/MeetUpDetails\";\n\nimport mongoose from \"mongoose\";\n\nconst Meetups = require(\"../../../models/meetups\");\n\nconst Details = (props) => {\n  let content = \"\";\n  if (props.available) {\n    content = (\n      <MeetUpDetails\n        image={props.image}\n        title={props.title}\n        address={props.address}\n        description={props.description}\n      />\n    );\n  }\n  return content;\n};\n\nexport async function getStaticPaths() {\n  mongoose\n    .connect(\n      \"mongodb+srv://SaiTeja:Ashkechum1224@cluster0.bwyer.mongodb.net/myMeetups?retryWrites=true&w=majority\"\n    )\n    .then(() => {\n      console.log(\"connected to DB\");\n    })\n    .catch(() => {\n      console.log(\"Failed to connect to DB\");\n    });\n\n  const meetupIds = await Meetups.find({}, \"_id\");\n\n  await mongoose.disconnect();\n\n  return {\n    fallback: true,\n    paths: [\n      {\n        params: { \"meetup-id\": \"m1\" },\n      },\n      {\n        params: { \"meetup-id\": \"m2\" },\n      },\n      {\n        params: { \"meetup-id\": \"m3\" },\n      },\n    ],\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params[\"meetup-id\"];\n\n  mongoose\n    .connect(\n      \"mongodb+srv://SaiTeja:Ashkechum1224@cluster0.bwyer.mongodb.net/myMeetups?retryWrites=true&w=majority\"\n    )\n    .then(() => {\n      console.log(\"connected to DB\");\n    })\n    .catch(() => {\n      console.log(\"Failed to connect to DB\");\n    });\n\n  //fetch\n  const data = await Meetups.findById(meetupId).exec();\n\n  await mongoose.disconnect();\n\n  if (data === null) {\n    return {\n      props: {\n        available: false,\n        message: \"Didnt find a match to the requested Meetup\",\n      },\n    };\n  } else {\n    return {\n      props: {\n        available: true,\n        image: data.image,\n        title: data.title,\n        address: data.address,\n        description: data.description,\n      },\n    };\n  }\n}\n\nexport default Details;\n"]},"metadata":{},"sourceType":"module"}